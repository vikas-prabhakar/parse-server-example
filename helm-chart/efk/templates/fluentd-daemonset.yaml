apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Values.efk.fluentd.name }}
  labels:
{{ include "efk.labels" . | indent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "efk.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
{{ include "efk.labels" . | indent 8 }}
    spec:
      serviceAccount:: {{ .Values.efk.fluentd.name }}
      serviceAccountName: {{ .Values.efk.fluentd.name }}
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      containers:
        - name: {{ .Values.efk.fluentd.name }}
          image: "{{ .Values.efk.fluentd.image.repository }}:{{ .Values.efk.fluentd.image.tag }}"
          imagePullPolicy: {{ .Values.efk.fluentd.image.pullPolicy }}
          env:
             - name:  FLUENT_ELASTICSEARCH_HOST
               value: "elasticsearch.kube-logging.svc.cluster.local"
             - name:  FLUENT_ELASTICSEARCH_PORT
               value: "9200"
             - name: FLUENT_ELASTICSEARCH_SCHEME
               value: "http"
             - name: FLUENT_UID
               value: "0"
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
          terminationGracePeriodSeconds: 30
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
